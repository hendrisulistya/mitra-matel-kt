syntax = "proto3";

package grpc;

option go_package = "github.com/JoSoft/mitra-matel/proto_gen/proto/grpc";

// ==========================================================
// Messages
// ==========================================================

// Request for vehicle search
message VehicleSearchRequest {
  string nomor_polisi = 1;
  string nomor_rangka = 2;
  string nomor_mesin = 3;
}

// Basic vehicle info returned by the search
message VehicleSearchResponse {
  string id = 1;
  string nomor_polisi = 2;
  string tipe_kendaraan = 3;
  string data_version = 4;
  string finance_name = 5;
}

// Container for multiple vehicles (used in unary or batch response)
message VehicleList {
  repeated VehicleSearchResponse vehicles = 1;
}

// Generic error wrapper
message ErrorMessage {
  string error_message = 1;
}

// Unified response wrapper for all RPC types
message Response {
  oneof payload {
    VehicleList vehicle_list = 1;
    ErrorMessage error_message = 2;
  }
}

// ==========================================================
// Service Definition
// ==========================================================

service VehicleSearchService {
  // -----------------------------
  // 1️⃣ Unary RPC
  // -----------------------------
  // Single request → single response (list of vehicles)
  rpc SearchVehicleUnary(VehicleSearchRequest) returns (VehicleList);

  // -----------------------------
  // 2️⃣ Server Streaming RPC
  // -----------------------------
  // Single request → stream of individual results
  rpc SearchVehicleStream(VehicleSearchRequest) returns (stream VehicleSearchResponse);

  // -----------------------------
  // 3️⃣ Client Streaming RPC
  // -----------------------------
  // Stream of requests → single combined response
  rpc SearchVehicleBatch(stream VehicleSearchRequest) returns (VehicleList);

  // -----------------------------
  // 4️⃣ Bidirectional Streaming RPC
  // -----------------------------
  // Stream of requests ↔ stream of responses
  rpc SearchVehicleBidirectional(stream VehicleSearchRequest) returns (stream VehicleSearchResponse);
}
